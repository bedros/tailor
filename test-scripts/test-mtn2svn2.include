#!/bin/sh

# File: test-mtn2svn2.include
#
# This is an include for all other tests with two branches and two keys.
# Tested with monotone 0.35, Subversion Version 1.3.0 (r17949)

STARTDIR=$PWD

# LANG is nessessary for localisired Monotone, because Tailor used 'mtn log'
# Need only, if LANG is not set for "mtn log" or "mtn list certs" (see patch)
# export LANG=POSIX

# Remove monotone keypair, because Tailor is bootstrapping it again (see patch)
rm -f $HOME/.monotone/keys/key-dummy $HOME/.monotone/keys/other-dummy

# Exit immediately if a command exits with a non-zero
set -e

# Create a new empty tempdirectory and work there.
rm -rf testdir
mkdir testdir
cd testdir

# execute monotone with more params
mtn_exec()
{
        mtn --norc --keydir=$KEYDIR --rcfile=$LUA "$@"
}

monotone_setup()
{
        # Don't use global users keys here
        KEYDIR=$PWD/test-monotone_keys
        LUA=$PWD/test-monotone.lua

        # Create keypair for testing
        cat <<EOF >$LUA
function get_passphrase(keypair_id)
  if (keypair_id == "key-dummy") then return "secret" end
  if (keypair_id == "other-dummy") then return "secret" end
end
EOF

        echo "secret" | mtn --norc --keydir=$KEYDIR genkey "key-dummy"
        echo "secret" | mtn --norc --keydir=$KEYDIR genkey "other-dummy"

        # Create a new data base with a branch
        mtn_exec --db=test1.mtn db init
        mtn_exec --db=test1.mtn --key="key-dummy" --branch=A setup monotone-work

        cd monotone-work
}

tailor_mtn2svn()
{

        # create first config for tailor
        cat <<EOF >test-mtn-svn-forward.conf
[DEFAULT]
use-propset = True
verbose = True
root-directory = $PWD/rootdir
source-repository = $PWD/test1.mtn
target-repository = file://$PWD/svnrepository

[project-a]
source = monotone:source.a
target = svn:target.a

[project-b]
source = monotone:source.b
target = svn:target.b

[monotone:source.a]
module = A
subdir = mtnside-a

[monotone:source.b]
module = B
subdir = mtnside-b

[svn:target.a]
module = A
subdir = svnside-a

[svn:target.b]
module = B
subdir = svnside-b
EOF

        # Convert from Monotone to Subversion
        tailor -c test-mtn-svn-forward.conf
}


tailor_svn2mtn()
{

        # create a second config for tailor
        cat <<EOF >test-mtn-svn-backward.conf
[DEFAULT]
use-propset = True
verbose = True

[project]
root-directory = $PWD/rootdir-back
target = monotone:target
source = svn:source

[monotone:target]
repository = $PWD/test2.mtn
module = A
subdir = mtnside
keygenid = key-dummy
passphrase = secret

[svn:source]
repository = file://$PWD/svnrepository
module = A
subdir = svnside
EOF

        # Convert back from Subversion to Monotone
        tailor -c test-mtn-svn-backward.conf
}


monotone_logs()
{
        # Create a log to see into:
        mtn --db=test1.mtn log --from `mtn --db=test1.mtn automate heads A` --no-graph > test1.log
        mtn --db=test2.mtn log --from `mtn --db=test2.mtn automate heads A` --no-graph > test2.log
}

testing_runs()
{
        cd ..

        tailor_mtn2svn
#        tailor_svn2mtn
#        monotone_logs

        cd $STARTDIR
}
